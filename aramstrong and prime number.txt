'''Prime numbers are numbers that have only 2 factors. Similarly, Armstrong number is a number that is equal to the sum of nth power of the digits of a n-bit number.

Example: Armstrong Number 153 = 13 + 53 + 33 = 1+125+27

We have to verify that the given number should be both prime & armstrong. If a number satisfy the basic definition of both print “Y” else print ”N” in the output.

Input Format

Accept a n-bit number as an input.

Constraints

1 <= n <= 4

Output Format

Print either “Y” or “N” as output.

Sample Input 0

1
Sample Output 0

Y
'''
n=input()[:4]
print(len(n))
sum1=0
count=0
if len(n)<=4:
    for i in range(len(n)):
        sum1+=(int(n[i])**3)
    #print(sum1)      
    if sum1==int(n):
        for i in range(2,(sum1-1)):
            if(sum1%i==0):
                count+=1
            else:
              pass
if sum1==int(n) and count==0:
   print("Y")
else:
  print("N")
 